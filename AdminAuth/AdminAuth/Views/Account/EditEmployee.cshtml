@model AdminAuth.Models.UserModel;
<h2 class="text-center">Edit Employee</h2>
<div class="container col-6">
    @using (Html.BeginForm("Update", "Account", FormMethod.Post, new { @id = "Update", @class = "form-control bg-light shadow-lg" }))
    {
        <div class="row mb-3 mt-3">
            <label class="col-2 ml-2"><strong>Name<span class="text-danger">*</span></strong></label>
            <div class="col-10 mr-2">
                @Html.TextBoxFor(m => m.Name, new { @class = "form-control", @id = "Name", @oninput = "this.value=(this.value.match('[A-Z a-z]+'))", maxlength = 50 })
                <label class="error text-danger" for="Name"></label>
            </div>
        </div>
        <div class="row mb-3">
            <label class="col-2 ml-2"><strong>Email<span class="text-danger">*</span></strong></label>
            <div class="col-10 mr-2">
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @id = "Email", maxlength = 50, @readonly = "readonly" })
                <label class="error text-danger" for="Email"></label>
            </div>
        </div>
        <div class="row mb-3">
            <label class="col-2 ml-2"><strong>Phone<span class="text-danger">*</span></strong></label>
            <div class="col-10 mr-2">
                @Html.TextBoxFor(m => m.Phone, new { @class = "form-control", @id = "Phone", @oninput = "this.value=(this.value.match('[0-9-]+'))", maxlength = 12 })
                <label class="error text-danger" for="Phone"></label>
            </div>
        </div>
        <div class="row mb-3">
            <label class="col-2 ml-2"><strong>Role<span class="text-danger">*</span></strong></label>
            <div class="col-10 mr-2">
                @Html.TextBoxFor(m => m.Role, new { @class = "form-control", @id = "Role", @oninput = "this.value=(this.value.match('[A-Z a-z]+'))", maxlength = 50, @readonly = "readonly" })
                <label class="error text-danger" for="Role"></label>
            </div>
        </div>
        <div id="ManagerName" style="display:none">
            <div class="row mb-3">
                <label class="col-2"><strong>Manager<span class="text-danger">*</span></strong></label>
                <div class="col-10">
                    @Html.TextBoxFor(m => m.Manager, new { @class = "form-control", @id = "Manager", @oninput = "this.value=(this.value.match('[A-Z a-z]+'))", maxlength = 50, @readonly = "readonly" })
                    <label class="error text-danger" for="Role"></label>
                </div>
            </div>
        </div>
        <div class="row mb-3 mt-3">
            <label class="col-2 ml-2"><strong>Address<span class="text-danger">*</span></strong></label>
            <div class="col-10 mr-2">
                @Html.TextAreaFor(m => m.Address, new { @class = "form-control", @id = "Address" })
                <label class="error text-danger" for="Address"></label>
            </div>
        </div>
        <div class="form-group text-center mt-2 mb-3">
            <button type="submit" class="btn btn-primary col-3 text-center" id="submit">Update</button>
        </div>
    }
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('#Phone').mask('000-0000-000');
            if ($('#Role').val() == "Team Member") {
                $('#ManagerName').css("display", "block")
            }
            else {
                $('#ManagerName').css("display", "none")
            }

            $("#Update").validate({
                rules: {
                    Name: {
                        required: true
                    },
                    Email: {
                        required: true,
                        email: true
                    },
                    Role: {
                        required: true
                    },
                    Manager: {
                        required: true
                    },
                    APassword: {
                        required: true,
                        equalTo: "Admin"
                    },
                    MPassword: {
                        required: true,
                        equalTo: "Manager"
                    }
                },
                messages: {
                    Name: {
                        required: "Name is a required field",
                    },
                    Email: {
                        required: "Email is a required field",
                        email: "Please enter a valid email"
                    },
                    Role: {
                        required: "Select a role"
                    },
                    Manager: {
                        required: "Select your manager"
                    },
                    APassword: {
                        required: "Please enter admin password",
                        equalTo: "Password incorrect"
                    },
                    MPassword: {
                        required: "Please enter manager password",
                        equalTo: "Password incorrect"
                    }
                }
            });
        });

    </script>
    <partial name="_ValidationScriptsPartial" />
}